// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VolunteerRequests.Infrastructure.DbContexts;

#nullable disable

namespace VolunteerRequests.Infrastructure.Migrations
{
    [DbContext(typeof(VolunteerRequestsDbContext))]
    [Migration("20250217144347_VolunteerRequests_Init")]
    partial class VolunteerRequests_Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("volunteer_requests")
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VolunteerRequests.Domain.Aggregate.UserRestriction", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("BannedUntil")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("banned_until");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_user_restrictions");

                    b.ToTable("user_restrictions", "volunteer_requests");
                });

            modelBuilder.Entity("VolunteerRequests.Domain.Aggregate.VolunteerRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<long?>("AdminId")
                        .HasColumnType("bigint")
                        .HasColumnName("admin_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid?>("DiscussionId")
                        .HasColumnType("uuid")
                        .HasColumnName("discussion_id");

                    b.Property<string>("RequestStatus")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("request_status");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.ComplexProperty<Dictionary<string, object>>("RejectionComment", "VolunteerRequests.Domain.Aggregate.VolunteerRequest.RejectionComment#RejectionComment", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .HasColumnType("text")
                                .HasColumnName("rejection_comment");
                        });

                    b.HasKey("Id")
                        .HasName("pk_volunteer_requests");

                    b.ToTable("volunteer_requests", "volunteer_requests");
                });

            modelBuilder.Entity("VolunteerRequests.Domain.Aggregate.VolunteerRequest", b =>
                {
                    b.OwnsOne("PetProject.SharedKernel.Shared.ValueObjects.VolunteerInfo", "VolunteerInfo", b1 =>
                        {
                            b1.Property<Guid>("VolunteerRequestId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<string>("SocialNetworks")
                                .IsRequired()
                                .HasColumnType("jsonb")
                                .HasColumnName("social_networks");

                            b1.HasKey("VolunteerRequestId");

                            b1.ToTable("volunteer_requests", "volunteer_requests");

                            b1.WithOwner()
                                .HasForeignKey("VolunteerRequestId")
                                .HasConstraintName("fk_volunteer_requests_volunteer_requests_id");

                            b1.OwnsOne("PetProject.SharedKernel.Shared.ValueObjects.Description", "GeneralDescription", b2 =>
                                {
                                    b2.Property<Guid>("VolunteerInfoVolunteerRequestId")
                                        .HasColumnType("uuid")
                                        .HasColumnName("id");

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasMaxLength(500)
                                        .HasColumnType("character varying(500)")
                                        .HasColumnName("general_description");

                                    b2.HasKey("VolunteerInfoVolunteerRequestId");

                                    b2.ToTable("volunteer_requests", "volunteer_requests");

                                    b2.WithOwner()
                                        .HasForeignKey("VolunteerInfoVolunteerRequestId")
                                        .HasConstraintName("fk_volunteer_requests_volunteer_requests_id");
                                });

                            b1.OwnsOne("PetProject.SharedKernel.Shared.ValueObjects.Experience", "WorkExperience", b2 =>
                                {
                                    b2.Property<Guid>("VolunteerInfoVolunteerRequestId")
                                        .HasColumnType("uuid")
                                        .HasColumnName("id");

                                    b2.Property<int>("Years")
                                        .HasColumnType("integer")
                                        .HasColumnName("age_experience");

                                    b2.HasKey("VolunteerInfoVolunteerRequestId");

                                    b2.ToTable("volunteer_requests", "volunteer_requests");

                                    b2.WithOwner()
                                        .HasForeignKey("VolunteerInfoVolunteerRequestId")
                                        .HasConstraintName("fk_volunteer_requests_volunteer_requests_id");
                                });

                            b1.OwnsOne("PetProject.SharedKernel.Shared.ValueObjects.FullName", "FullName", b2 =>
                                {
                                    b2.Property<Guid>("VolunteerInfoVolunteerRequestId")
                                        .HasColumnType("uuid")
                                        .HasColumnName("id");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasMaxLength(50)
                                        .HasColumnType("character varying(50)")
                                        .HasColumnName("name");

                                    b2.Property<string>("Patronymic")
                                        .HasMaxLength(50)
                                        .HasColumnType("character varying(50)")
                                        .HasColumnName("patronymic");

                                    b2.Property<string>("Surname")
                                        .IsRequired()
                                        .HasMaxLength(50)
                                        .HasColumnType("character varying(50)")
                                        .HasColumnName("surname");

                                    b2.HasKey("VolunteerInfoVolunteerRequestId");

                                    b2.ToTable("volunteer_requests", "volunteer_requests");

                                    b2.WithOwner()
                                        .HasForeignKey("VolunteerInfoVolunteerRequestId")
                                        .HasConstraintName("fk_volunteer_requests_volunteer_requests_id");
                                });

                            b1.OwnsOne("PetProject.SharedKernel.Shared.ValueObjects.PhoneNumber", "PhoneNumber", b2 =>
                                {
                                    b2.Property<Guid>("VolunteerInfoVolunteerRequestId")
                                        .HasColumnType("uuid")
                                        .HasColumnName("id");

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasColumnType("text")
                                        .HasColumnName("phone_number");

                                    b2.HasKey("VolunteerInfoVolunteerRequestId");

                                    b2.ToTable("volunteer_requests", "volunteer_requests");

                                    b2.WithOwner()
                                        .HasForeignKey("VolunteerInfoVolunteerRequestId")
                                        .HasConstraintName("fk_volunteer_requests_volunteer_requests_id");
                                });

                            b1.Navigation("FullName")
                                .IsRequired();

                            b1.Navigation("GeneralDescription")
                                .IsRequired();

                            b1.Navigation("PhoneNumber")
                                .IsRequired();

                            b1.Navigation("WorkExperience")
                                .IsRequired();
                        });

                    b.Navigation("VolunteerInfo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
